# yum install nginx -y 
# systemctl enable nginx 
# systemctl start nginx 
# rm -rf /usr/share/nginx/html/* 
# curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip 
# cd /usr/share/nginx/html 
# unzip /tmp/frontend.zip




# /etc/nginx/default.d/roboshop.conf

# proxy_http_version 1.1;
# location /images/ {
#   expires 5s;
#   root   /usr/share/nginx/html;
#   try_files $uri /images/placeholder.jpg;
# }
# location /api/catalogue/ { proxy_pass http://localhost:8080/; }
# location /api/user/ { proxy_pass http://localhost:8080/; }
# location /api/cart/ { proxy_pass http://localhost:8080/; }
# location /api/shipping/ { proxy_pass http://localhost:8080/; }
# location /api/payment/ { proxy_pass http://localhost:8080/; }

# location /health {
#   stub_status on;
#   access_log off;
# }

- name: Install the Nginx
  ansible.builtin.yum:
    name: nginx
    state: installed
    
- name: Remove old content
  ansible.builtin.file:
    path: /usr/share/nginx/html 
    state: absent
    
- name: Create a directory of Application
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: directory

# - name: Download and Extract Frontend Content
#   ansible.builtin.unarchive:
#     src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
#     dest: /usr/share/nginx/html
#     remote_src: yes
    
- name: Create Config in Nginx
  ansible.builtin.template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    
- name: Create Roboshop Config in Nginx
  ansible.builtin.template:
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf
    
- name: Start Nginx Service
  ansible.builtin.systemd:
    name: nginx
    state: restarted
    enabled: yes 
    
# # Download from Nexus    
# - name: Download and Extract {{ component }} App Files
#   ansible.builtin.unarchive:
#     src: http://{{ lookup('amazon.aws.aws_ssm', '{{env}}.nexus.user', region='us-east-1') }}:{{ lookup('amazon.aws.aws_ssm', '{{env}}.nexus.pass', region='us-east-1') }}@nexus.devops36.shop:8081/repository/{{component}}/{{component}}-{{app_version}}.zip
#     dest: /app 
#     remote_src: yes    

# Download from Nexus    
- name: Download and Extract {{ component }} App Files
  ansible.builtin.unarchive:
    src: admin:admin123@172.31.5.233:8081/repository/{{component}}/{{component}}-{{app_version}}.zip
    dest: /usr/share/nginx/html 
    remote_src: yes


